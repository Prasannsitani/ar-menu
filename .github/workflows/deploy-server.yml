name: Build & Deploy Server
on: [workflow_dispatch]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Docker Build
        run: |
          cd server
          docker build -t menu-server .
          docker images

      - name: Check Values
        run: |
          echo "${{ secrets.SSH_KEY }}"
          echo "${{ secrets.SSH_USERNAME }}"
          echo "${{ secrets.SSH_HOST }}"

      - name: Install SSHPASS Package
        run: |
          sudo apt-get install sshpass

      - name: Copy Docker Image to Remote Server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.SSH_PARAPHRASE }}" | sshpass -e ssh-add - <<<"${{ secrets.SSH_KEY }}"
          sudo scp -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -o "ForwardAgent yes" server/menu-server:latest ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/menu-server:latest
          sudo killall ssh-agent
            
      # - name: Copy Docker Image to Remote Server
      #   env:
      #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #   run: |
      #     eval "$(ssh-agent -s)"
      #     echo "${{ secrets.SSH_PARAPHRASE }}" | sshpass -p- ssh-add - <<<"${{ secrets.SSH_KEY }}"
      #     sudo scp -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -o "ForwardAgent yes" server/menu-server:latest ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/menu-server:latest
      #     sudo killall ssh-agent   

      # echo "${{ secrets.SSH_PASSPHRASE }}" | sshpass -p- ssh-add - <<<"${{ secrets.SSH_KEY }}"
      # echo "${{ secrets.SSH_PARAPHRASE }}" | ssh-add -k - 
      # - name: Copy Docker Image to Remote Server
      #   run: |
      #     sudo scp -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa server/menu-server:latest ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/menu-server:latest
  
      # - name: SSH into Remote Server and Run Container
      #   run: |
      #     sudo ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'docker run -d -p 8080:80 /home/${{ secrets.SSH_USERNAME }}/menu-server:latest'   

      # - name: DigitalOcean Login
      #   run: |
      #     doctl auth init -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      # - name: DigitalOcean Push Image
      #   run: |
      #     doctl registry login
      #     doctl registry tag menu-server:latest registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY }}/menu-server:latest
      #     doctl registry push registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY }}/menu-server:latest

      # - name: DigitalOcean Deploy
      #   run: |
      #     doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER }}
      #     kubectl set image deployment/menu-deployment menu=registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY }}/menu-server:latest
          
